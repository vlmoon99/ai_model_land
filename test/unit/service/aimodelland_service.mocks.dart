// Mocks generated by Mockito 5.4.4 from annotations
// in ai_model_land/test/unit/service/aimodelland_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:ai_model_land/ai_model_land_lib.dart' as _i6;
import 'package:ai_model_land/models/core/base_model.dart' as _i4;
import 'package:ai_model_land/models/core/task_request_model.dart' as _i8;
import 'package:ai_model_land/models/core/task_response_model.dart' as _i5;
import 'package:ai_model_land/repositories/i_repository.dart' as _i2;
import 'package:ai_model_land/services/ai_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRepository_0<T> extends _i1.SmartFake implements _i2.Repository<T> {
  _FakeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAiService_1 extends _i1.SmartFake implements _i3.AiService {
  _FakeAiService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseModel_2 extends _i1.SmartFake implements _i4.BaseModel {
  _FakeBaseModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskResponseModel_3 extends _i1.SmartFake
    implements _i5.TaskResponseModel {
  _FakeTaskResponseModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AiModelLandLib].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiModelLandLib extends _i1.Mock implements _i6.AiModelLandLib {
  MockAiModelLandLib() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository<_i4.BaseModel> get coreRepository => (super.noSuchMethod(
        Invocation.getter(#coreRepository),
        returnValue: _FakeRepository_0<_i4.BaseModel>(
          this,
          Invocation.getter(#coreRepository),
        ),
      ) as _i2.Repository<_i4.BaseModel>);

  @override
  _i3.AiService get aiService => (super.noSuchMethod(
        Invocation.getter(#aiService),
        returnValue: _FakeAiService_1(
          this,
          Invocation.getter(#aiService),
        ),
      ) as _i3.AiService);

  @override
  _i7.Future<_i4.BaseModel> addModel({required _i4.BaseModel? baseModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addModel,
          [],
          {#baseModel: baseModel},
        ),
        returnValue: _i7.Future<_i4.BaseModel>.value(_FakeBaseModel_2(
          this,
          Invocation.method(
            #addModel,
            [],
            {#baseModel: baseModel},
          ),
        )),
      ) as _i7.Future<_i4.BaseModel>);

  @override
  _i7.Future<bool> loadModel({
    required _i8.TaskRequestModel? request,
    required _i4.BaseModel? baseModel,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadModel,
          [],
          {
            #request: request,
            #baseModel: baseModel,
          },
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> stopModel({required _i4.BaseModel? baseModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopModel,
          [],
          {#baseModel: baseModel},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i5.TaskResponseModel> runTaskOnTheModel({
    required _i8.TaskRequestModel? request,
    required _i4.BaseModel? baseModel,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTaskOnTheModel,
          [],
          {
            #request: request,
            #baseModel: baseModel,
          },
        ),
        returnValue:
            _i7.Future<_i5.TaskResponseModel>.value(_FakeTaskResponseModel_3(
          this,
          Invocation.method(
            #runTaskOnTheModel,
            [],
            {
              #request: request,
              #baseModel: baseModel,
            },
          ),
        )),
      ) as _i7.Future<_i5.TaskResponseModel>);

  @override
  _i7.Future<bool> isModelLoaded({required _i4.BaseModel? baseModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #isModelLoaded,
          [],
          {#baseModel: baseModel},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> deleteModelFromDevice({required _i4.BaseModel? baseModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteModelFromDevice,
          [],
          {#baseModel: baseModel},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<Map<String, dynamic>> checkPlatformInfo() => (super.noSuchMethod(
        Invocation.method(
          #checkPlatformInfo,
          [],
        ),
        returnValue:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<bool> restartModel({
    required _i4.BaseModel? baseModel,
    required _i8.TaskRequestModel? request,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restartModel,
          [],
          {
            #baseModel: baseModel,
            #request: request,
          },
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> deleteAllModels(
          {required _i4.ModelSourceType? sourceType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllModels,
          [],
          {#sourceType: sourceType},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<List<_i4.BaseModel>> readAll() => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
        ),
        returnValue: _i7.Future<List<_i4.BaseModel>>.value(<_i4.BaseModel>[]),
      ) as _i7.Future<List<_i4.BaseModel>>);

  @override
  _i7.Future<void> updateForType({required _i4.BaseModel? baseModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateForType,
          [],
          {#baseModel: baseModel},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
